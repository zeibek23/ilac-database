"""Initial migration

Revision ID: 06ba5d66f6b9
Revises: 
Create Date: 2025-05-22 11:39:12.593850

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '06ba5d66f6b9'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('clinical_annotation',
    sa.Column('clinical_annotation_id', sa.String(), nullable=False),
    sa.Column('level_of_evidence', sa.String(), nullable=True),
    sa.Column('phenotype_category', sa.String(), nullable=True),
    sa.Column('url', sa.String(), nullable=True),
    sa.Column('latest_history_date', sa.Date(), nullable=True),
    sa.Column('specialty_population', sa.String(), nullable=True),
    sa.Column('level_override', sa.String(), nullable=True),
    sa.Column('level_modifiers', sa.String(), nullable=True),
    sa.Column('score', sa.Float(), nullable=True),
    sa.Column('pmid_count', sa.Integer(), nullable=True),
    sa.Column('evidence_count', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('clinical_annotation_id')
    )
    op.create_table('drug_category',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('parent_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['parent_id'], ['drug_category.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('drug_label',
    sa.Column('pharmgkb_id', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('source', sa.String(), nullable=True),
    sa.Column('biomarker_flag', sa.String(), nullable=True),
    sa.Column('testing_level', sa.String(), nullable=True),
    sa.Column('has_prescribing_info', sa.String(), nullable=True),
    sa.Column('has_dosing_info', sa.String(), nullable=True),
    sa.Column('has_alternate_drug', sa.String(), nullable=True),
    sa.Column('has_other_prescribing_guidance', sa.String(), nullable=True),
    sa.Column('cancer_genome', sa.String(), nullable=True),
    sa.Column('prescribing', sa.String(), nullable=True),
    sa.Column('latest_history_date', sa.Date(), nullable=True),
    sa.PrimaryKeyConstraint('pharmgkb_id')
    )
    op.create_table('gene',
    sa.Column('gene_id', sa.String(length=50), nullable=False),
    sa.Column('gene_symbol', sa.String(length=100), nullable=False),
    sa.PrimaryKeyConstraint('gene_id'),
    sa.UniqueConstraint('gene_symbol')
    )
    op.create_table('indication',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('foundation_uri', sa.String(length=255), nullable=True),
    sa.Column('disease_id', sa.String(length=255), nullable=True),
    sa.Column('name_en', sa.String(length=255), nullable=False),
    sa.Column('name_tr', sa.String(length=255), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('synonyms', sa.Text(), nullable=True),
    sa.Column('species', sa.String(length=50), nullable=True),
    sa.Column('code', sa.String(length=50), nullable=True),
    sa.Column('class_kind', sa.String(length=50), nullable=True),
    sa.Column('depth', sa.Integer(), nullable=True),
    sa.Column('parent_id', sa.Integer(), nullable=True),
    sa.Column('is_residual', sa.Boolean(), nullable=False),
    sa.Column('is_leaf', sa.Boolean(), nullable=False),
    sa.Column('chapter_no', sa.String(length=10), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('BlockId', sa.String(length=50), nullable=True),
    sa.ForeignKeyConstraint(['parent_id'], ['indication.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('indication', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_indication_BlockId'), ['BlockId'], unique=False)
        batch_op.create_index(batch_op.f('ix_indication_code'), ['code'], unique=False)
        batch_op.create_index(batch_op.f('ix_indication_disease_id'), ['disease_id'], unique=True)
        batch_op.create_index(batch_op.f('ix_indication_foundation_uri'), ['foundation_uri'], unique=True)
        batch_op.create_index(batch_op.f('ix_indication_parent_id'), ['parent_id'], unique=False)

    op.create_table('metabolism_enzyme',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('metabolism_organ',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('news',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=200), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('category', sa.String(length=50), nullable=False),
    sa.Column('publication_date', sa.Date(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('occupation',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('occurrences',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('source_type', sa.String(), nullable=True),
    sa.Column('source_id', sa.String(), nullable=True),
    sa.Column('source_name', sa.Text(), nullable=True),
    sa.Column('object_type', sa.String(), nullable=True),
    sa.Column('object_id', sa.String(), nullable=True),
    sa.Column('object_name', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('occurrences', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_occurrences_object_id'), ['object_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_occurrences_source_id'), ['source_id'], unique=False)

    op.create_table('pathway',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('pathway_id', sa.String(length=50), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('organism', sa.String(length=50), nullable=False),
    sa.Column('url', sa.String(length=255), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('pathway_id')
    )
    op.create_table('phenotype',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=200), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('publication',
    sa.Column('pmid', sa.String(length=50), nullable=False),
    sa.Column('title', sa.Text(), nullable=True),
    sa.Column('year', sa.String(length=4), nullable=True),
    sa.Column('journal', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('pmid')
    )
    op.create_table('receptor',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('type', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('molecular_weight', sa.String(length=50), nullable=True),
    sa.Column('length', sa.Integer(), nullable=True),
    sa.Column('gene_name', sa.String(length=100), nullable=True),
    sa.Column('subcellular_location', sa.Text(), nullable=True),
    sa.Column('function', sa.Text(), nullable=True),
    sa.Column('iuphar_id', sa.String(length=50), nullable=True),
    sa.Column('pdb_ids', sa.Text(), nullable=True),
    sa.Column('binding_site_x', sa.Float(), nullable=True),
    sa.Column('binding_site_y', sa.Float(), nullable=True),
    sa.Column('binding_site_z', sa.Float(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('relationships',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('entity1_id', sa.String(), nullable=True),
    sa.Column('entity1_name', sa.String(), nullable=True),
    sa.Column('entity1_type', sa.String(), nullable=True),
    sa.Column('entity2_id', sa.String(), nullable=True),
    sa.Column('entity2_name', sa.String(), nullable=True),
    sa.Column('entity2_type', sa.String(), nullable=True),
    sa.Column('evidence', sa.String(), nullable=True),
    sa.Column('association', sa.String(), nullable=True),
    sa.Column('pk', sa.String(), nullable=True),
    sa.Column('pd', sa.String(), nullable=True),
    sa.Column('pmids', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('relationships', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_relationships_entity1_id'), ['entity1_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_relationships_entity2_id'), ['entity2_id'], unique=False)

    op.create_table('route_of_administration',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('type', sa.String(length=50), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('parent_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['parent_id'], ['route_of_administration.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('salt',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name_tr', sa.String(length=100), nullable=False),
    sa.Column('name_en', sa.String(length=100), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('side_effect',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name_en', sa.String(length=100), nullable=False),
    sa.Column('name_tr', sa.String(length=100), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('target',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name_tr', sa.String(length=100), nullable=False),
    sa.Column('name_en', sa.String(length=100), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=False),
    sa.Column('password', sa.String(length=128), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('surname', sa.String(length=50), nullable=False),
    sa.Column('date_of_birth', sa.Date(), nullable=False),
    sa.Column('occupation', sa.String(length=100), nullable=True),
    sa.Column('is_admin', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('variant',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('pharmgkb_id', sa.String(length=50), nullable=True),
    sa.Column('name', sa.String(length=200), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name'),
    sa.UniqueConstraint('pharmgkb_id')
    )
    op.create_table('variant_annotation',
    sa.Column('variant_annotation_id', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('variant_annotation_id')
    )
    op.create_table('automated_annotations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('chemical_id', sa.String(), nullable=True),
    sa.Column('chemical_name', sa.String(), nullable=True),
    sa.Column('chemical_in_text', sa.String(), nullable=True),
    sa.Column('variation_id', sa.String(), nullable=True),
    sa.Column('variation_name', sa.String(), nullable=True),
    sa.Column('variation_type', sa.String(), nullable=True),
    sa.Column('variation_in_text', sa.String(), nullable=True),
    sa.Column('gene_ids', sa.Text(), nullable=True),
    sa.Column('gene_symbols', sa.Text(), nullable=True),
    sa.Column('gene_in_text', sa.Text(), nullable=True),
    sa.Column('literature_id', sa.String(), nullable=True),
    sa.Column('literature_title', sa.Text(), nullable=True),
    sa.Column('publication_year', sa.String(), nullable=True),
    sa.Column('journal', sa.Text(), nullable=True),
    sa.Column('sentence', sa.Text(), nullable=True),
    sa.Column('source', sa.String(), nullable=True),
    sa.Column('pmid', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['pmid'], ['publication.pmid'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('automated_annotations', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_automated_annotations_chemical_id'), ['chemical_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_automated_annotations_gene_symbols'), ['gene_symbols'], unique=False)
        batch_op.create_index(batch_op.f('ix_automated_annotations_pmid'), ['pmid'], unique=False)
        batch_op.create_index(batch_op.f('ix_automated_annotations_variation_id'), ['variation_id'], unique=False)

    op.create_table('clinical_ann_allele',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('clinical_annotation_id', sa.String(), nullable=True),
    sa.Column('genotype_allele', sa.String(), nullable=True),
    sa.Column('annotation_text', sa.Text(), nullable=True),
    sa.Column('allele_function', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['clinical_annotation_id'], ['clinical_annotation.clinical_annotation_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('clinical_ann_allele', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_clinical_ann_allele_genotype_allele'), ['genotype_allele'], unique=False)

    op.create_table('clinical_ann_evidence',
    sa.Column('evidence_id', sa.String(), nullable=False),
    sa.Column('clinical_annotation_id', sa.String(), nullable=True),
    sa.Column('evidence_type', sa.String(), nullable=True),
    sa.Column('evidence_url', sa.String(), nullable=True),
    sa.Column('summary', sa.Text(), nullable=True),
    sa.Column('score', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['clinical_annotation_id'], ['clinical_annotation.clinical_annotation_id'], ),
    sa.PrimaryKeyConstraint('evidence_id')
    )
    with op.batch_alter_table('clinical_ann_evidence', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_clinical_ann_evidence_evidence_type'), ['evidence_type'], unique=False)

    op.create_table('clinical_ann_history',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('clinical_annotation_id', sa.String(), nullable=True),
    sa.Column('date', sa.Date(), nullable=True),
    sa.Column('type', sa.String(), nullable=True),
    sa.Column('comment', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['clinical_annotation_id'], ['clinical_annotation.clinical_annotation_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('clinical_ann_history', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_clinical_ann_history_date'), ['date'], unique=False)

    op.create_table('clinical_annotation_gene',
    sa.Column('clinical_annotation_id', sa.String(), nullable=False),
    sa.Column('gene_id', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['clinical_annotation_id'], ['clinical_annotation.clinical_annotation_id'], ),
    sa.ForeignKeyConstraint(['gene_id'], ['gene.gene_id'], ),
    sa.PrimaryKeyConstraint('clinical_annotation_id', 'gene_id')
    )
    op.create_table('clinical_annotation_phenotype',
    sa.Column('clinical_annotation_id', sa.String(), nullable=False),
    sa.Column('phenotype_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['clinical_annotation_id'], ['clinical_annotation.clinical_annotation_id'], ),
    sa.ForeignKeyConstraint(['phenotype_id'], ['phenotype.id'], ),
    sa.PrimaryKeyConstraint('clinical_annotation_id', 'phenotype_id')
    )
    op.create_table('clinical_annotation_variant',
    sa.Column('clinical_annotation_id', sa.String(), nullable=False),
    sa.Column('variant_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['clinical_annotation_id'], ['clinical_annotation.clinical_annotation_id'], ),
    sa.ForeignKeyConstraint(['variant_id'], ['variant.id'], ),
    sa.PrimaryKeyConstraint('clinical_annotation_id', 'variant_id')
    )
    op.create_table('clinical_variants',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('variant_type', sa.String(), nullable=True),
    sa.Column('level_of_evidence', sa.String(), nullable=True),
    sa.Column('gene_id', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['gene_id'], ['gene.gene_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('clinical_variants', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_clinical_variants_gene_id'), ['gene_id'], unique=False)

    op.create_table('drug',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name_tr', sa.String(length=100), nullable=False),
    sa.Column('name_en', sa.String(length=100), nullable=False),
    sa.Column('alternative_names', sa.Text(), nullable=True),
    sa.Column('fda_approved', sa.Boolean(), nullable=False),
    sa.Column('indications', sa.Text(), nullable=True),
    sa.Column('chembl_id', sa.String(length=50), nullable=True),
    sa.Column('category_id', sa.Integer(), nullable=True),
    sa.Column('pharmgkb_id', sa.String(length=50), nullable=True),
    sa.ForeignKeyConstraint(['category_id'], ['drug_category.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('pharmgkb_id')
    )
    op.create_table('drug_label_gene',
    sa.Column('pharmgkb_id', sa.String(), nullable=False),
    sa.Column('gene_id', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['gene_id'], ['gene.gene_id'], ),
    sa.ForeignKeyConstraint(['pharmgkb_id'], ['drug_label.pharmgkb_id'], ),
    sa.PrimaryKeyConstraint('pharmgkb_id', 'gene_id')
    )
    op.create_table('drug_label_variant',
    sa.Column('pharmgkb_id', sa.String(), nullable=False),
    sa.Column('variant_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['pharmgkb_id'], ['drug_label.pharmgkb_id'], ),
    sa.ForeignKeyConstraint(['variant_id'], ['variant.id'], ),
    sa.PrimaryKeyConstraint('pharmgkb_id', 'variant_id')
    )
    op.create_table('study_parameters',
    sa.Column('study_parameters_id', sa.String(), nullable=False),
    sa.Column('variant_annotation_id', sa.String(), nullable=True),
    sa.Column('study_type', sa.String(), nullable=True),
    sa.Column('study_cases', sa.Integer(), nullable=True),
    sa.Column('study_controls', sa.Integer(), nullable=True),
    sa.Column('characteristics', sa.Text(), nullable=True),
    sa.Column('characteristics_type', sa.String(), nullable=True),
    sa.Column('frequency_in_cases', sa.Float(), nullable=True),
    sa.Column('allele_of_frequency_in_cases', sa.String(), nullable=True),
    sa.Column('frequency_in_controls', sa.Float(), nullable=True),
    sa.Column('allele_of_frequency_in_controls', sa.String(), nullable=True),
    sa.Column('p_value', sa.String(), nullable=True),
    sa.Column('ratio_stat_type', sa.String(), nullable=True),
    sa.Column('ratio_stat', sa.Float(), nullable=True),
    sa.Column('confidence_interval_start', sa.Float(), nullable=True),
    sa.Column('confidence_interval_stop', sa.Float(), nullable=True),
    sa.Column('biogeographical_groups', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['variant_annotation_id'], ['variant_annotation.variant_annotation_id'], ),
    sa.PrimaryKeyConstraint('study_parameters_id')
    )
    op.create_table('variant_annotation_gene',
    sa.Column('variant_annotation_id', sa.String(), nullable=False),
    sa.Column('gene_id', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['gene_id'], ['gene.gene_id'], ),
    sa.ForeignKeyConstraint(['variant_annotation_id'], ['variant_annotation.variant_annotation_id'], ),
    sa.PrimaryKeyConstraint('variant_annotation_id', 'gene_id')
    )
    op.create_table('variant_annotation_variant',
    sa.Column('variant_annotation_id', sa.String(), nullable=False),
    sa.Column('variant_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['variant_annotation_id'], ['variant_annotation.variant_annotation_id'], ),
    sa.ForeignKeyConstraint(['variant_id'], ['variant.id'], ),
    sa.PrimaryKeyConstraint('variant_annotation_id', 'variant_id')
    )
    op.create_table('variant_drug_ann',
    sa.Column('variant_annotation_id', sa.String(), nullable=False),
    sa.Column('significance', sa.String(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('sentence', sa.Text(), nullable=True),
    sa.Column('alleles', sa.String(), nullable=True),
    sa.Column('specialty_population', sa.String(), nullable=True),
    sa.Column('metabolizer_types', sa.String(), nullable=True),
    sa.Column('is_plural', sa.String(), nullable=True),
    sa.Column('is_associated', sa.String(), nullable=True),
    sa.Column('direction_of_effect', sa.String(), nullable=True),
    sa.Column('pd_pk_terms', sa.String(), nullable=True),
    sa.Column('multiple_drugs', sa.String(), nullable=True),
    sa.Column('population_types', sa.String(), nullable=True),
    sa.Column('population_phenotypes_diseases', sa.String(), nullable=True),
    sa.Column('multiple_phenotypes_diseases', sa.String(), nullable=True),
    sa.Column('comparison_alleles', sa.String(), nullable=True),
    sa.Column('comparison_metabolizer_types', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['variant_annotation_id'], ['variant_annotation.variant_annotation_id'], ),
    sa.PrimaryKeyConstraint('variant_annotation_id')
    )
    op.create_table('variant_fa_ann',
    sa.Column('variant_annotation_id', sa.String(), nullable=False),
    sa.Column('significance', sa.String(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('sentence', sa.Text(), nullable=True),
    sa.Column('alleles', sa.String(), nullable=True),
    sa.Column('specialty_population', sa.String(), nullable=True),
    sa.Column('assay_type', sa.String(), nullable=True),
    sa.Column('metabolizer_types', sa.String(), nullable=True),
    sa.Column('is_plural', sa.String(), nullable=True),
    sa.Column('is_associated', sa.String(), nullable=True),
    sa.Column('direction_of_effect', sa.String(), nullable=True),
    sa.Column('functional_terms', sa.String(), nullable=True),
    sa.Column('gene_product', sa.String(), nullable=True),
    sa.Column('when_treated_with', sa.String(), nullable=True),
    sa.Column('multiple_drugs', sa.String(), nullable=True),
    sa.Column('cell_type', sa.String(), nullable=True),
    sa.Column('comparison_alleles', sa.String(), nullable=True),
    sa.Column('comparison_metabolizer_types', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['variant_annotation_id'], ['variant_annotation.variant_annotation_id'], ),
    sa.PrimaryKeyConstraint('variant_annotation_id')
    )
    op.create_table('variant_pheno_ann',
    sa.Column('variant_annotation_id', sa.String(), nullable=False),
    sa.Column('significance', sa.String(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('sentence', sa.Text(), nullable=True),
    sa.Column('alleles', sa.String(), nullable=True),
    sa.Column('specialty_population', sa.String(), nullable=True),
    sa.Column('metabolizer_types', sa.String(), nullable=True),
    sa.Column('is_plural', sa.String(), nullable=True),
    sa.Column('is_associated', sa.String(), nullable=True),
    sa.Column('direction_of_effect', sa.String(), nullable=True),
    sa.Column('side_effect_efficacy_other', sa.String(), nullable=True),
    sa.Column('phenotype', sa.String(), nullable=True),
    sa.Column('multiple_phenotypes', sa.String(), nullable=True),
    sa.Column('when_treated_with', sa.String(), nullable=True),
    sa.Column('multiple_drugs', sa.String(), nullable=True),
    sa.Column('population_types', sa.String(), nullable=True),
    sa.Column('population_phenotypes_diseases', sa.String(), nullable=True),
    sa.Column('multiple_phenotypes_diseases', sa.String(), nullable=True),
    sa.Column('comparison_alleles', sa.String(), nullable=True),
    sa.Column('comparison_metabolizer_types', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['variant_annotation_id'], ['variant_annotation.variant_annotation_id'], ),
    sa.PrimaryKeyConstraint('variant_annotation_id')
    )
    op.create_table('clinical_ann_evidence_publication',
    sa.Column('evidence_id', sa.String(), nullable=False),
    sa.Column('pmid', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['evidence_id'], ['clinical_ann_evidence.evidence_id'], ),
    sa.ForeignKeyConstraint(['pmid'], ['publication.pmid'], ),
    sa.PrimaryKeyConstraint('evidence_id', 'pmid')
    )
    op.create_table('clinical_annotation_drug',
    sa.Column('clinical_annotation_id', sa.String(), nullable=False),
    sa.Column('drug_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['clinical_annotation_id'], ['clinical_annotation.clinical_annotation_id'], ),
    sa.ForeignKeyConstraint(['drug_id'], ['drug.id'], ),
    sa.PrimaryKeyConstraint('clinical_annotation_id', 'drug_id')
    )
    op.create_table('clinical_variant_drug',
    sa.Column('clinical_variant_id', sa.Integer(), nullable=False),
    sa.Column('drug_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['clinical_variant_id'], ['clinical_variants.id'], ),
    sa.ForeignKeyConstraint(['drug_id'], ['drug.id'], ),
    sa.PrimaryKeyConstraint('clinical_variant_id', 'drug_id')
    )
    op.create_table('clinical_variant_phenotype',
    sa.Column('clinical_variant_id', sa.Integer(), nullable=False),
    sa.Column('phenotype_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['clinical_variant_id'], ['clinical_variants.id'], ),
    sa.ForeignKeyConstraint(['phenotype_id'], ['phenotype.id'], ),
    sa.PrimaryKeyConstraint('clinical_variant_id', 'phenotype_id')
    )
    op.create_table('clinical_variant_variant',
    sa.Column('clinical_variant_id', sa.Integer(), nullable=False),
    sa.Column('variant_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['clinical_variant_id'], ['clinical_variants.id'], ),
    sa.ForeignKeyConstraint(['variant_id'], ['variant.id'], ),
    sa.PrimaryKeyConstraint('clinical_variant_id', 'variant_id')
    )
    op.create_table('drug_detail',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('drug_id', sa.Integer(), nullable=False),
    sa.Column('salt_id', sa.Integer(), nullable=True),
    sa.Column('molecular_formula', sa.String(length=100), nullable=True),
    sa.Column('synthesis', sa.Text(), nullable=True),
    sa.Column('structure', sa.String(length=200), nullable=True),
    sa.Column('structure_3d', sa.String(length=200), nullable=True),
    sa.Column('mechanism_of_action', sa.Text(), nullable=True),
    sa.Column('iupac_name', sa.String(length=200), nullable=True),
    sa.Column('smiles', sa.String(length=200), nullable=True),
    sa.Column('inchikey', sa.String(length=200), nullable=True),
    sa.Column('pubchem_cid', sa.String(length=50), nullable=True),
    sa.Column('pubchem_sid', sa.String(length=50), nullable=True),
    sa.Column('cas_id', sa.String(length=50), nullable=True),
    sa.Column('ec_number', sa.String(length=50), nullable=True),
    sa.Column('nci_code', sa.String(length=50), nullable=True),
    sa.Column('rxcui', sa.String(length=50), nullable=True),
    sa.Column('snomed_id', sa.String(length=50), nullable=True),
    sa.Column('molecular_weight', sa.Float(), nullable=True),
    sa.Column('pharmacodynamics', sa.Text(), nullable=True),
    sa.Column('indications', sa.Text(), nullable=True),
    sa.Column('target_molecules', sa.Text(), nullable=True),
    sa.Column('pharmacokinetics', sa.Text(), nullable=True),
    sa.Column('boiling_point', sa.String(length=100), nullable=True),
    sa.Column('melting_point', sa.String(length=100), nullable=True),
    sa.Column('density', sa.String(length=100), nullable=True),
    sa.Column('solubility', sa.String(length=200), nullable=True),
    sa.Column('flash_point', sa.String(length=100), nullable=True),
    sa.Column('fda_approved', sa.Boolean(), nullable=False),
    sa.Column('ema_approved', sa.Boolean(), nullable=False),
    sa.Column('titck_approved', sa.Boolean(), nullable=False),
    sa.Column('black_box_warning', sa.Boolean(), nullable=False),
    sa.Column('black_box_details', sa.Text(), nullable=True),
    sa.Column('half_life', sa.Float(), nullable=True),
    sa.Column('clearance_rate', sa.Float(), nullable=True),
    sa.Column('bioavailability', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['drug_id'], ['drug.id'], ),
    sa.ForeignKeyConstraint(['salt_id'], ['salt.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('drug_disease_interaction',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('drug_id', sa.Integer(), nullable=False),
    sa.Column('indication_id', sa.Integer(), nullable=False),
    sa.Column('interaction_type', sa.String(length=50), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('severity', sa.String(length=20), nullable=True),
    sa.Column('recommendation', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['drug_id'], ['drug.id'], ),
    sa.ForeignKeyConstraint(['indication_id'], ['indication.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('drug_interaction',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('drug1_id', sa.Integer(), nullable=False),
    sa.Column('drug2_id', sa.Integer(), nullable=False),
    sa.Column('route_id', sa.Integer(), nullable=True),
    sa.Column('interaction_type', sa.String(length=50), nullable=False),
    sa.Column('interaction_description', sa.Text(), nullable=False),
    sa.Column('severity', sa.String(length=20), nullable=False),
    sa.Column('mechanism', sa.Text(), nullable=True),
    sa.Column('pharmacokinetics', sa.Text(), nullable=True),
    sa.Column('monitoring', sa.Text(), nullable=True),
    sa.Column('alternatives', sa.Text(), nullable=True),
    sa.Column('reference', sa.Text(), nullable=True),
    sa.Column('predicted_severity', sa.String(length=50), nullable=True),
    sa.Column('prediction_confidence', sa.Float(), nullable=True),
    sa.Column('processed', sa.Boolean(), nullable=True),
    sa.Column('time_to_peak', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['drug1_id'], ['drug.id'], ),
    sa.ForeignKeyConstraint(['drug2_id'], ['drug.id'], ),
    sa.ForeignKeyConstraint(['route_id'], ['route_of_administration.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('drug_label_drug',
    sa.Column('pharmgkb_id', sa.String(), nullable=False),
    sa.Column('drug_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['drug_id'], ['drug.id'], ),
    sa.ForeignKeyConstraint(['pharmgkb_id'], ['drug_label.pharmgkb_id'], ),
    sa.PrimaryKeyConstraint('pharmgkb_id', 'drug_id')
    )
    op.create_table('drug_receptor_interaction',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('drug_id', sa.Integer(), nullable=False),
    sa.Column('receptor_id', sa.Integer(), nullable=False),
    sa.Column('affinity', sa.Float(), nullable=True),
    sa.Column('interaction_type', sa.String(length=50), nullable=True),
    sa.Column('mechanism', sa.Text(), nullable=True),
    sa.Column('pdb_file', sa.String(length=200), nullable=True),
    sa.Column('units', sa.String(), nullable=True),
    sa.Column('affinity_parameter', sa.String(length=50), nullable=True),
    sa.ForeignKeyConstraint(['drug_id'], ['drug.id'], ),
    sa.ForeignKeyConstraint(['receptor_id'], ['receptor.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('drug_salt',
    sa.Column('drug_id', sa.Integer(), nullable=False),
    sa.Column('salt_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['drug_id'], ['drug.id'], ),
    sa.ForeignKeyConstraint(['salt_id'], ['salt.id'], ),
    sa.PrimaryKeyConstraint('drug_id', 'salt_id')
    )
    op.create_table('metabolite',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=200), nullable=False),
    sa.Column('parent_id', sa.Integer(), nullable=True),
    sa.Column('drug_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['drug_id'], ['drug.id'], ),
    sa.ForeignKeyConstraint(['parent_id'], ['metabolite.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('pathway_drug',
    sa.Column('pathway_id', sa.Integer(), nullable=False),
    sa.Column('drug_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['drug_id'], ['drug.id'], ),
    sa.ForeignKeyConstraint(['pathway_id'], ['pathway.id'], ),
    sa.PrimaryKeyConstraint('pathway_id', 'drug_id')
    )
    op.create_table('variant_annotation_drug',
    sa.Column('variant_annotation_id', sa.String(), nullable=False),
    sa.Column('drug_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['drug_id'], ['drug.id'], ),
    sa.ForeignKeyConstraint(['variant_annotation_id'], ['variant_annotation.variant_annotation_id'], ),
    sa.PrimaryKeyConstraint('variant_annotation_id', 'drug_id')
    )
    op.create_table('detail_side_effect',
    sa.Column('detail_id', sa.Integer(), nullable=False),
    sa.Column('side_effect_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['detail_id'], ['drug_detail.id'], ),
    sa.ForeignKeyConstraint(['side_effect_id'], ['side_effect.id'], ),
    sa.PrimaryKeyConstraint('detail_id', 'side_effect_id')
    )
    op.create_table('drug_route',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('drug_detail_id', sa.Integer(), nullable=False),
    sa.Column('route_id', sa.Integer(), nullable=False),
    sa.Column('pharmacodynamics', sa.Text(), nullable=True),
    sa.Column('pharmacokinetics', sa.Text(), nullable=True),
    sa.Column('absorption_rate_min', sa.Float(), nullable=True),
    sa.Column('absorption_rate_max', sa.Float(), nullable=True),
    sa.Column('vod_rate_min', sa.Float(), nullable=True),
    sa.Column('vod_rate_max', sa.Float(), nullable=True),
    sa.Column('protein_binding_min', sa.Float(), nullable=True),
    sa.Column('protein_binding_max', sa.Float(), nullable=True),
    sa.Column('half_life_min', sa.Float(), nullable=True),
    sa.Column('half_life_max', sa.Float(), nullable=True),
    sa.Column('clearance_rate_min', sa.Float(), nullable=True),
    sa.Column('clearance_rate_max', sa.Float(), nullable=True),
    sa.Column('bioavailability_min', sa.Float(), nullable=True),
    sa.Column('bioavailability_max', sa.Float(), nullable=True),
    sa.Column('tmax_min', sa.Float(), nullable=True),
    sa.Column('tmax_max', sa.Float(), nullable=True),
    sa.Column('cmax_min', sa.Float(), nullable=True),
    sa.Column('cmax_max', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['drug_detail_id'], ['drug_detail.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['route_id'], ['route_of_administration.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('drug_route_metabolism_enzyme',
    sa.Column('drug_route_id', sa.Integer(), nullable=False),
    sa.Column('metabolism_enzyme_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['drug_route_id'], ['drug_route.id'], ),
    sa.ForeignKeyConstraint(['metabolism_enzyme_id'], ['metabolism_enzyme.id'], ),
    sa.PrimaryKeyConstraint('drug_route_id', 'metabolism_enzyme_id')
    )
    op.create_table('drug_route_metabolism_organ',
    sa.Column('drug_route_id', sa.Integer(), nullable=False),
    sa.Column('metabolism_organ_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['drug_route_id'], ['drug_route.id'], ),
    sa.ForeignKeyConstraint(['metabolism_organ_id'], ['metabolism_organ.id'], ),
    sa.PrimaryKeyConstraint('drug_route_id', 'metabolism_organ_id')
    )
    op.create_table('drug_route_metabolite',
    sa.Column('drug_route_id', sa.Integer(), nullable=False),
    sa.Column('metabolite_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['drug_route_id'], ['drug_route.id'], ),
    sa.ForeignKeyConstraint(['metabolite_id'], ['metabolite.id'], ),
    sa.PrimaryKeyConstraint('drug_route_id', 'metabolite_id')
    )
    op.create_table('route_indication',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('drug_detail_id', sa.Integer(), nullable=False),
    sa.Column('route_id', sa.Integer(), nullable=False),
    sa.Column('indication_id', sa.Integer(), nullable=False),
    sa.Column('drug_route_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['drug_detail_id'], ['drug_detail.id'], ),
    sa.ForeignKeyConstraint(['drug_route_id'], ['drug_route.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['indication_id'], ['indication.id'], ),
    sa.ForeignKeyConstraint(['route_id'], ['route_of_administration.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('route_indication')
    op.drop_table('drug_route_metabolite')
    op.drop_table('drug_route_metabolism_organ')
    op.drop_table('drug_route_metabolism_enzyme')
    op.drop_table('drug_route')
    op.drop_table('detail_side_effect')
    op.drop_table('variant_annotation_drug')
    op.drop_table('pathway_drug')
    op.drop_table('metabolite')
    op.drop_table('drug_salt')
    op.drop_table('drug_receptor_interaction')
    op.drop_table('drug_label_drug')
    op.drop_table('drug_interaction')
    op.drop_table('drug_disease_interaction')
    op.drop_table('drug_detail')
    op.drop_table('clinical_variant_variant')
    op.drop_table('clinical_variant_phenotype')
    op.drop_table('clinical_variant_drug')
    op.drop_table('clinical_annotation_drug')
    op.drop_table('clinical_ann_evidence_publication')
    op.drop_table('variant_pheno_ann')
    op.drop_table('variant_fa_ann')
    op.drop_table('variant_drug_ann')
    op.drop_table('variant_annotation_variant')
    op.drop_table('variant_annotation_gene')
    op.drop_table('study_parameters')
    op.drop_table('drug_label_variant')
    op.drop_table('drug_label_gene')
    op.drop_table('drug')
    with op.batch_alter_table('clinical_variants', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_clinical_variants_gene_id'))

    op.drop_table('clinical_variants')
    op.drop_table('clinical_annotation_variant')
    op.drop_table('clinical_annotation_phenotype')
    op.drop_table('clinical_annotation_gene')
    with op.batch_alter_table('clinical_ann_history', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_clinical_ann_history_date'))

    op.drop_table('clinical_ann_history')
    with op.batch_alter_table('clinical_ann_evidence', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_clinical_ann_evidence_evidence_type'))

    op.drop_table('clinical_ann_evidence')
    with op.batch_alter_table('clinical_ann_allele', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_clinical_ann_allele_genotype_allele'))

    op.drop_table('clinical_ann_allele')
    with op.batch_alter_table('automated_annotations', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_automated_annotations_variation_id'))
        batch_op.drop_index(batch_op.f('ix_automated_annotations_pmid'))
        batch_op.drop_index(batch_op.f('ix_automated_annotations_gene_symbols'))
        batch_op.drop_index(batch_op.f('ix_automated_annotations_chemical_id'))

    op.drop_table('automated_annotations')
    op.drop_table('variant_annotation')
    op.drop_table('variant')
    op.drop_table('user')
    op.drop_table('target')
    op.drop_table('side_effect')
    op.drop_table('salt')
    op.drop_table('route_of_administration')
    with op.batch_alter_table('relationships', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_relationships_entity2_id'))
        batch_op.drop_index(batch_op.f('ix_relationships_entity1_id'))

    op.drop_table('relationships')
    op.drop_table('receptor')
    op.drop_table('publication')
    op.drop_table('phenotype')
    op.drop_table('pathway')
    with op.batch_alter_table('occurrences', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_occurrences_source_id'))
        batch_op.drop_index(batch_op.f('ix_occurrences_object_id'))

    op.drop_table('occurrences')
    op.drop_table('occupation')
    op.drop_table('news')
    op.drop_table('metabolism_organ')
    op.drop_table('metabolism_enzyme')
    with op.batch_alter_table('indication', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_indication_parent_id'))
        batch_op.drop_index(batch_op.f('ix_indication_foundation_uri'))
        batch_op.drop_index(batch_op.f('ix_indication_disease_id'))
        batch_op.drop_index(batch_op.f('ix_indication_code'))
        batch_op.drop_index(batch_op.f('ix_indication_BlockId'))

    op.drop_table('indication')
    op.drop_table('gene')
    op.drop_table('drug_label')
    op.drop_table('drug_category')
    op.drop_table('clinical_annotation')
    # ### end Alembic commands ###
